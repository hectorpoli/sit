<?php

namespace Hap\EquiposBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;


/**
 * Inventario
 *
 * @ORM\Table()
 * @ORM\Entity
 */
class Inventario
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="modelo", type="string", length=50)
     */
    private $modelo;

    /**
     * @ORM\ManyToOne(targetEntity="Marca", inversedBy="inventario")
     * @ORM\JoinColumn(name="marca_id", referencedColumnName="id")
     * @Assert\NotBlank(message="Este campo no puede estar en blanco")
     */
    protected $marca;

    /**
     * @var string
     *
     * @ORM\Column(name="descripcion", type="text")
     * @Assert\NotBlank(message="Este campo no puede estar en blanco")
     */
    private $descripcion;

    /**
     * @var string
     *
     * @ORM\Column(name="serial", type="string", length=100)
     */
    private $serial;

    /**
     * @var string
     *
     * @ORM\Column(name="numerobien", type="string", length=100)
     */
    private $numerobien;
    
    
    /**
     * @ORM\ManyToOne(targetEntity="Productos", inversedBy="inventario")
     * @ORM\JoinColumn(name="productos_id", referencedColumnName="id")
     * @Assert\NotBlank(message="Este campo no puede estar en blanco")
     */
    protected $productos;
    
    
    
    /**
     * @ORM\ManyToOne(targetEntity="Departamentos", inversedBy="inventario")
     * @ORM\JoinColumn(name="departamentos_id", referencedColumnName="id")
     * @Assert\NotBlank(message="Este campo no puede estar en blanco")
     */
    protected $departamento;
    
    
    /**
     * @ORM\OneToMany(targetEntity="Servidores", mappedBy="inventario")
     */
    protected $servidores;

    
    public function __toString() {
        return 'Producto: ' . $this->productos . ',Marca: ' . $this->marca . ', Modelo: ' .$this->modelo . ', Serial: ' .$this->serial;
    }

    
}
